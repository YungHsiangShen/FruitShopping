@{
	ViewData["Title"] = "產品管理";
}
@section Styles{
	<style>
		thead {
			background-color: #d5bdaf;
			color: #edede9;
		}

		label {
			width: 123px;
		}
	</style>
}
<div id="showProducts">
	<div class="mx-3 my-3">
		<form class="d-flex" role="search">
			<label class="fs-4 me-3">搜尋商品</label>
			<input class="form-control me-2 w-100" type="text" placeholder="请输入商品ID、商品名稱、種類、供應商搜尋商品" v-model="sreachProducts" @@keyup="filterProducts">
			<a class="btn btn-outline-secondary">新增商品</a>
		</form>
	</div>
	<div>
		<table class="table table-striped table-hover">
			<thead>
				<tr>
					<th scope="col">No.</th>
					<th scope="col">產品名稱</th>
					<th scope="col">成本</th>
					<th scope="col">售價</th>
					<th scope="col">產品種類</th>
					<th scope="col">產地</th>
					<th scope="col">供應商</th>
					<th scope="col" class="col-lg-3">編輯</th>
				</tr>
			</thead>
			<tbody>
				<tr v-for="item in products">
					<th>{{item.productId}}</th>
					<td>{{item.productName}}</td>
					<td>{{item.costPrice}}</td>
					<td>{{item.unitPrice}}</td>
					<td>{{item.categoryName}}</td>
					<td>{{item.supplierName}}</td>
					<td>{{item.placeOfOriginName}}</td>
					<td>
						<button type="button" class="btn btn-secondary" @* @@click="details" *@>檢視</button>
						<button type="button" class="btn btn-warning" @* @@click="edit" *@>編輯</button>
						<button type="button" class="btn btn-danger" @* @@click="productdelete" *@>刪除</button>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</div>

@section Scripts
	{
	<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
	<script>
		var app = new Vue({
			el: '#showProducts',
			data: {
				products: [],
				sreachProducts: ''
			},
			mounted: function () {
				let _this = this;
				_this.listproducts();
				_this.filterProducts();
			},
			methods: {
				listproducts: function () {
					let _this = this;
					fetch("https://localhost:7099/api/ProductApi/GetAllProducts")
						.then(response =>
							response.json())
						.then(data => _this.products = data);
				},
				filterProducts: function () {
					let _this = this;
					var request = {};
					request.ProductId = isNaN(Number(_this.sreachProducts)) ? -1 : Number(_this.sreachProducts);
					request.ProductName = request.CategoryName = request.SupplierName = request.PlaceOfOriginName = _this.sreachProducts;
					fetch("https://localhost:7099/api/ProductApi/FilterProduct/FilterProduct", {
						method: "POST",
						headers: {
							"Content-Type": "application/json",
							"Accept": "application/json",
						},
						body: JSON.stringify(request)
					}).then(response =>
						response.json())
						.then(data =>
							_this.products = data)
				}
			}
		});
	</script>
}